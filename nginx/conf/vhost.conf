server {
  set $forward_scheme http;
  set $server "gatexwallip";
  set $port gatexwallport;
  listen 80;
  # listen 443 ssl http2;
  server_name gatexwalldomain www.gatexwalldomain;

  # Let's Encrypt SSL
  # ssl_certificate /etc/letsencrypt/live/gatexwalldomain/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/gatexwalldomain/privkey.pem;

  # HSTS (ngx_http_headers_module is required) (63072000 seconds = 2 years)
  add_header Strict-Transport-Security "max-age=63072000;includeSubDomains; preload" always;

  # Force SSL
  # if ($scheme = "http") { return 301 https://$host$request_uri; }

  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $http_connection;
  proxy_http_version 1.1;

  access_log /var/log/nginx/gatexwalldomain.log;
  error_log /var/log/nginx/gatexwalldomain.err warn;

  # Block robot agent
  if ($http_user_agent ~* "(curl|sqlmap|w3m|links|bot|client|python|masscan|fasthttp)") {
    return 405;
  }

  location / {
    # Limiting connection
    limit_req zone=one burst=10 nodelay;
    limit_conn addr 10;

    # Allow GET & POST
    if ($request_method !~ ^(GET|POST)$ ) {
      return 405;
    }

    # Block exploit (POST)
    if ($request_body ~* "(ls|cat|passwd)") {
      return 200 "Thank you for requesting ${request_uri}";
    }

    # Block exploit
    #if ($args ~* "(drop|insert|md5|select|union|from|between|information_schema|hex|database)") {
    #  return 308 http://gatexwalldomain;
    #}
    if ($args ~* "(boot\.ini|etc/passwd|self/environ|\.\.)") {
      return 308 http://gatexwalldomain;
    }
    if ($args ~* "(%3c|%3e)") {
      return 308 http://gatexwalldomain;
    }
    if ($args ~* "(eval|exec|shell|system|passthru|base64|popen|proc_open)") {
      return 308 http://gatexwalldomain;
    }
    if ($args ~* "(127\.0\.0\.|localhost)") {
      return 308 http://gatexwalldomain;
    }
    if ($args ~* "(ncat|bash|zsh|perl|python|ruby)") {
      return 308 http://gatexwalldomain;
    }
    if ($args ~* "(\.git|\.svn|\.env|\.hg|\.htpasswd|\.ssh|\.bash)") {
      return 308 http://gatexwalldomain;
    }

    # HSTS (ngx_http_headers_module is required) (63072000 seconds = 2 years)
    add_header Strict-Transport-Security "max-age=63072000;includeSubDomains; preload" always;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    proxy_http_version 1.1;

    # Proxy!
    add_header X-Served-By $host;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Scheme $scheme;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass $forward_scheme://$server:$port$request_uri;
  }

  location ~* ^.+.(jpg|jpeg|gif|png|svg|ico|css|less|xml|html?|swf|js|ttf)$ {
    # Allow GET
    if ($request_method !~ ^(GET)$ ) {
      return 405;
    }

    # HSTS (ngx_http_headers_module is required) (63072000 seconds = 2 years)
    add_header Strict-Transport-Security "max-age=63072000;includeSubDomains; preload" always;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    proxy_http_version 1.1;

    # Proxy!
    add_header X-Served-By $host;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Scheme $scheme;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass $forward_scheme://$server:$port$request_uri;

    # No limit
    expires max;
  }
}